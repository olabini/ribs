- Think about unit of work
- Refactor to be repository based instead - NOTHING related to the database should be saved in the model.
  This means doing away with getters and setters automatically created, it means doing away with finders and creators and stuff on the class. All this should be in the Repository implementation. The Ribs definition can still be in the object - but it's not necessary. The repository creates a mapping from scratch with guesses, from the database, if no ribs definition is there. You can have several Ribs definitions for different repositories. They can be inherited so you can avoid or add something just specifically for another database. The repository instances contain information about if something has been created or not, etc.
db and repository are different things. DB is the low level database connection
Helper to create model objects:

model_from_database :Track

- Add default values
- Add default value to avoid so that AVOID values can be used for NOT NULL
- Don't use "find". Use "get" and "all" from DataMapper
